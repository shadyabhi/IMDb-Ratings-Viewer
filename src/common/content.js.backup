// ==UserScript==
// @name IMDB Ratings Viewer
// @include http://www.imdb.com/*
// ==/UserScript==
//


ImdbRatings = {
    init : function () {
        ImdbRatings.main();
    },

    getMovieLinkFromElement : function (element, typeOfElement) {
        //
        // This function simply returns href links from nodeelement object
        //
        if (typeOfElement === "normal") {
            return element.childNodes[3].childNodes[0].href;
        }
        if (typeOfElement === "knownfor") {
            return element.childNodes[1].href;
        }
    },

    getAllMovieElements : function () {
        //All Movie elements are in 2 different classes (they do it for different color tones
        var i=0;
        var ele_even = document.getElementsByClassName("filmo-row even");
        var ele_odd = document.getElementsByClassName("filmo-row odd");

        //Reoder the elements as right now, Nodelist for odd and even are separated.
        var all_elements = new Array(ele_even.length + ele_odd.length);
        var index = 0;
        var max = ele_odd.length > ele_even.length?ele_odd:ele_even;

        for (i=0; i<max.length; i++){
            if (i < ele_odd.length) {
                all_elements[index++] = ele_odd[i];
            }
            if (i < ele_even.length) {
                all_elements[index++] = ele_even[i];
            }
        }
        return all_elements;
    },

    getRatingsFromLocalStorage : function () {
        var movie_link = getMovieLinkFromElement(element, typeOfElement);
        var rating = kango.storage.getItem(movie_link);
        // If rating is found in local storage, it's good, else return null
        return rating;
    },

    addRating_inpage : function (element, rating) {
    if (rating != null){
        var container = document.createElement("span");
        var rating_container = document.createElement("span");  //Did this crap to make brackets black
        rating_container.appendChild(document.createTextNode(rating));
        rating_container.className = "in_production";   //Give it a red color to mantain consistency
        container.appendChild(document.createTextNode(" ("));
        container.appendChild(rating_container);
        container.appendChild(document.createTextNode(")"));
        element.appendChild(container);
        }
    },

    callback_getAndsetRating_ajax : function (element, request, typeOfElement) {
    var serverResponse = request.responseText;
    var pattern=/titlePageSprite star-box-giga-star\"\>(.*?)\</;
    var rating = null;
    var match_rating = serverResponse.match(pattern);
    if (match_rating != null){
        rating = match_rating[1];
    }
    if (rating !== null){
        localStorage.setItem(getMovieLinkFromElement(element, typeOfElement), rating);
        if (typeOfElement === "normal") addRating_inpage(element.childNodes[3], rating);
        if (typeOfElement === "knownfor") addRating_inpage(element.childNodes[5], rating);
        }
    },

    //typeOfElement bcos we do a getMovieLinkFromElement() call
    getRating_ajax : function (element, typeOfElement)
    {
        var request = new XMLHttpRequest();
        request.onreadystatechange = function(){
            if ( request.readyState == 4 ){
                callback_getAndsetRating_ajax(element, request, typeOfElement);
            }
        };
        request.open( "GET", getMovieLinkFromElement(element, typeOfElement), true );
        request.send();
    },

    setRating : function (element, typeOfElement){
        // typeOfElement can have two values
        //      1. "knownfor"
        //      2. "normal"

        var rating = null;

        alert("In setRating");
        //First check in localStorage
        rating = getRating_localStorage(element, typeOfElement);
        if (rating == null){
            //Not found in localStorage
            rating = getRating_ajax(element, typeOfElement);
        }
        else{
            if (typeOfElement == "normal") addRating_inpage(element.childNodes[3], rating);
            if (typeOfElement == "knownfor") addRating_inpage(element.childNodes[3], rating);
        }
    },

    main : function () {
        alert("Hello from main");
        //Ratings are to be presented in two places.
        //  1. KnownFor div (group of 4 movies)
        //  2. Actual movie list at the bottom

        // Lets handle the KnownFor first
        //try{
        //    //For suggestions
        //   var ele_knownfor = document.getElementById("knownfor");
        //    for (i=1; i<=7; i=i+2){ //Assumed number as 4
        //        setRating(ele_knownfor.childNodes[i], "knownfor");
        //    }
        //}
        //catch (err) {}; //Catches Exception when KnownFor is not present for certains Actors.

        // Lets handle the actual movie list now
        all_elements = ImdbRatings.getMovieElements();
        for (i=0; i<all_elements.length; i++){
            setRating(all_elements[i], "normal");
        }
    }
}

ImdbRatings.init();
